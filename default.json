{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base",
    "group:allNonMajor",
    ":semanticCommitTypeAll(chore)",
    ":semanticCommitScope(monorepo)",
    ":automergeBranchPush",
    ":automergeRequireAllStatusChecks"
  ],
  "timezone": "America/New_York",
  "ignorePaths": ["examples/**", "node_modules/**", "dist/**", "tmp/**", ".storm/**"],
  "labels": ["dependencies"],
  "rangeStrategy": "bump",
  "rebaseWhen": "conflicted",
  "semanticCommitScope": "monorepo",
  "npm": {
    "commitMessageTopic": "{{prettyDepType}} {{depName}}"
  },
  "regexManagers": [
    {
      "fileMatch": [
        "^\\.tool-versions$",
        "(^|/)Dockerfile[^/]*$",
        "^rust-toolchain\\.toml$",
        "^docs/.*?\\.mdx$"
      ],
      "matchStrings": [
        "(#|<!--)\\s*renovate-automation: rustc version\\s*(?:-->)?\\n[^.]*?(?<currentValue>[0-9]+\\.[0-9]+\\.[0-9]+)\\b"
      ],
      "depNameTemplate": "rust",
      "datasourceTemplate": "docker"
    }
  ],
  "packageRules": [
    {
      "groupName": "Auto-merge Storm Software Dependencies",
      "matchDatasources": ["npm"],
      "matchPackagePatterns": [
        "^@storm-software/",
        "^@stryke/",
        "^@storm-stack/",
        "^@cyclone-ui/",
        "^@acidic/"
      ],
      "automerge": true,
      "automergeType": "branch",
      "schedule": ["after 2am and before 3am"]
    },
    {
      "groupName": "Auto-merge Non-major Dependencies",
      "matchUpdateTypes": ["minor", "patch", "pin", "digest"],
      "automerge": true,
      "automergeType": "branch",
      "schedule": ["after 2am and before 3am"]
    },
    {
      "groupName": "Create PR for Major Dependencies",
      "matchUpdateTypes": ["major"],
      "automerge": false,
      "automergeType": "pr",
      "prCreation": "immediate",
      "prTitle": "Upgrade monorepo's major dependencies",
      "assignees": ["@sullivanpj", "@storm-software/operations"],
      "schedule": ["on sunday at 12am"]
    },
    {
      "groupName": "Create PR for Major Dependencies",
      "matchUpdateTypes": ["major"],
      "automerge": false,
      "automergeType": "pr",
      "prCreation": "immediate",
      "prTitle": "Upgrade monorepo's major dependencies",
      "assignees": ["@sullivanpj", "@storm-software/operations"],
      "schedule": ["on sunday at 12am"]
    },

    // Don't do `rust` image updates on Dockerfiles since they'll we want them
    // managed/grouped into the package rule directly after this one.  This
    // prevents multiple PRs for the same bump, and puts all our Rust version
    // bumps together.
    {
      "matchPackageNames": ["rust"],
      "matchManagers": ["dockerfile"],
      "enabled": false
    },
    {
      // This "rust" name maps to the Docker Hub "rust" image above on account
      // of the `regexManagers[0]` defined above being `datasourceTemplate` = `docker`.
      "matchPackageNames": ["rust"],
      "matchManagers": "regex",
      "groupName": "rustc",
      "branchName": "{{{branchPrefix}}}rustc",
      "schedule": ["after 2am and before 3am"]
    },
    // Bunch up all non-major npm dependencies into a single PR.  In the common case
    // where the upgrades apply cleanly, this causes less noise and is resolved faster
    // than starting a bunch of upgrades in parallel for what may turn out to be
    // a suite of related packages all released at once.
    //
    // Since too much in the Rust ecosystem is pre-1.0, we make an exception here.
    {
      "matchCurrentVersion": "< 1.0.0",
      "separateMinorPatch": true,
      "matchManagers": ["cargo"],
      "minor": {
        "groupName": "cargo pre-1.0 packages",
        "groupSlug": "cargo-all-pre-1.0"
      },
      "patch": {
        "groupName": "cargo pre-1.0 packages",
        "groupSlug": "cargo-all-pre-1.0",
        "automerge": true
      },
      "schedule": ["after 2am and before 3am"]
    },
    {
      "matchCurrentVersion": ">= 1.0.0",
      "matchManagers": ["cargo", "npm"],
      "excludePackageNames": [],
      "matchUpdateTypes": ["minor", "patch", "pin", "digest"],
      "groupName": "all non-major packages >= 1.0",
      "groupSlug": "all-non-major-gte-1.0",
      "automerge": true,
      "schedule": ["after 2am and before 3am"]
    },
    // We're currently constrained in our ability to update the `tracing`
    // packages to the latest versions because of our usage.  As an extension
    // of the same concern, we cannot update our `opentelemetry` packages since
    // those are tightly intertwined.  This exception puts those packages into
    // their own group and away from other dep updates until the time that
    // those problems are no longer.  For more details, see the explainations
    // in the `/apollo-router/Cargo.toml` file around the declarations for
    // `^opentelemetry` and `^tracing` packages.
    {
      "matchManagers": ["cargo"],
      "matchPackagePatterns": ["^tracing", "^opentelemetry"],
      "groupName": "cargo tracing packages",
      "groupSlug": "cargo-tracing-packages",
      "dependencyDashboardApproval": true,
      "schedule": ["after 2am and before 3am"]
    }

    // {
    //     "groupName": "Tamagui dependencies",
    //     "matchDatasources": ["npm"],
    //     "matchPackageNames": ["tamagui", "^@tamagui/"],
    //     "automerge": false
    //     },
    //     {
    //     "groupName": "Major dependencies",
    //     "matchUpdateTypes": ["major"],
    //     "automerge": false
    //     },
    // {
    //   "groupName": "patch & minor dev dependencies",
    //   "depTypeList": ["devDependencies"],
    //   "updateTypes": ["digest", "minor", "patch", "pin"],
    //   "automerge": true
    // },
    // {
    //   "groupName": "patch dependencies",
    //   "depTypeList": ["dependencies"],
    //   "updateTypes": ["patch", "pin"],
    //   "automerge": true
    // }
  ],
  "ignoreDeps": [
    "@types/react",
    "@types/react-dom",
    "tsup",
    "react",
    "react-dom",
    "react-native",
    "typescript",
    "next",
    "storybook",
    "tamagui",
    "^@tamagui/",
    "nx",
    "^@nx/",
    "^@deepkit/"
  ]
}
